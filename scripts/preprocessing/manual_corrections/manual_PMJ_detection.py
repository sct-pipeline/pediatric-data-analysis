#
# Manual corrections of PMJ labels
#
# This script was used to perform manual correction of vertebral discs labels for the following subjects after visually inspecting the data
# generated by TotalSpineSeg (with the 'pediatric_data_preprocessing.sh' script): 
#
# Usage:
#   1. Activate venv_sct
#   2. Run the following script:
#   python manual_PMJ_detection.py -i /path/to/dataset -o /path/to/derivatives/labels
#
# Author: Samuelle St-Onge
#

import os
import argparse
import yaml 
import spinalcordtoolbox.utils as sct
from spinalcordtoolbox.scripts import sct_label_utils


def get_arguments():
    parser = argparse.ArgumentParser(description="Manual PMJ detection")
    parser.add_argument("-i", "--input_dir", required=True, help="Path to T2w data")
    parser.add_argument("-o", "--output_dir", required=True, help="Path to 'derivatives/labels' (where the automatic PMJ labels are stored)")
    return parser.parse_args()

# Get the arguments
args = get_arguments()

# Loop through each subject in the input directory
for subject in os.listdir(args.input_dir):
    print(subject)
   
    # Check for rec-composed T2w image
    if os.path.exists(os.path.join(args.input_dir, subject, f"anat/{subject}_rec-composed_T2w.nii.gz")):
        T2w_image = os.path.join(args.input_dir, subject, f"anat/{subject}_rec-composed_T2w.nii.gz")
    elif os.path.exists(os.path.join(args.input_dir, subject, f"anat/{subject}_acq-top_run-1_T2w.nii.gz")):
        T2w_image = os.path.join(args.input_dir, subject, f"anat/{subject}_acq-top_run-1_T2w.nii.gz")

        if os.path.exists(os.path.join(args.input_dir, subject, f"anat/{subject}_acq-top_T2w.nii.gz")):
            T2w_image = os.path.join(args.input_dir, subject, f"anat/{subject}_acq-top_T2w.nii.gz")    
            PMJlabel = os.path.join(args.output_dir, subject, f"anat/{subject}_acq-top_T2w_label-PMJ_dlabel.nii.gz")
        
        elif os.path.exists(os.path.join(args.input_dir, subject, f"anat/{subject}_acq-top_run-1_T2w.nii.gz")):
            T2w_image = os.path.join(args.input_dir, subject, f"anat/{subject}_acq-top_run-1_T2w.nii.gz")    
            PMJlabel = os.path.join(args.output_dir, subject, f"anat/{subject}_acq-top_run-1_T2w_label-PMJ_dlabel.nii.gz")

        sct_label_utils.main(['-i', T2w_image,
                            '-create-viewer', '1', # only 1 label for the PMJ
                            '-o', PMJlabel])
    